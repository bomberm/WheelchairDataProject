#! /usr/bin/env python
#
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Feb 01, 2018 01:59:29 AM
import sys

try:
    from Tkinter import *
except ImportError:
    from tkinter import *

try:
    import ttk
    py3 = 0
except ImportError:
    import tkinter.ttk as ttk
    py3 = 1

import interface_support

def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    top = ROS_Test_Controller (root)
    interface_support.init(root, top)
    root.mainloop()

w = None
def create_ROS_Test_Controller(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel (root)
    top = ROS_Test_Controller (w)
    interface_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_ROS_Test_Controller():
    global w
    w.destroy()
    w = None


class ROS_Test_Controller:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#d9d9d9' # X11 color: 'gray85'
        _ana1color = '#d9d9d9' # X11 color: 'gray85'
        _ana2color = '#d9d9d9' # X11 color: 'gray85'

        top.geometry("394x109+728+316")
        top.title("ROS Test Controller")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#d9d9d9")
        top.configure(highlightcolor="black")



        self.but38 = Button(top)
        self.but38.place(relx=0.63, rely=0.28, height=24, width=71)
        self.but38.configure(activebackground="#d9d9d9")
        self.but38.configure(activeforeground="#000000")
        self.but38.configure(background="#d9d9d9")
        self.but38.configure(command=interface_support.record)
        self.but38.configure(disabledforeground="#a3a3a3")
        self.but38.configure(foreground="#000000")
        self.but38.configure(highlightbackground="#d9d9d9")
        self.but38.configure(highlightcolor="black")
        self.but38.configure(pady="0")
        self.but38.configure(text='''Record Bag''')
        self.recordingStatus = 0;

        self.menubar = Menu(top,font="TkMenuFont",bg=_bgcolor,fg=_fgcolor)
        top.configure(menu = self.menubar)



        self.connectionStatus = Message(top)
        self.connectionStatus.place(relx=0.03, rely=0.64, relheight=0.28
                , relwidth=0.94)
        self.connectionStatus.configure(background="#d9d9d9")
        self.connectionStatus.configure(foreground="#000000")
        self.connectionStatus.configure(highlightbackground="#d9d9d9")
        self.connectionStatus.configure(highlightcolor="black")
        self.connectionStatus.configure(text='''Initializing''')
        self.connectionStatus.configure(width=370)

        self.idEntry = Entry(top)
        self.idEntry.place(relx=0.2, rely=0.28, relheight=0.22, relwidth=0.37)
        self.idEntry.configure(background="white")
        self.idEntry.configure(disabledforeground="#a3a3a3")
        self.idEntry.configure(font="TkFixedFont")
        self.idEntry.configure(foreground="#000000")
        self.idEntry.configure(highlightbackground="#d9d9d9")
        self.idEntry.configure(highlightcolor="black")
        self.idEntry.configure(insertbackground="black")
        self.idEntry.configure(selectbackground="#c4c4c4")
        self.idEntry.configure(selectforeground="black")
        self.idEntry.configure(width=144)

        self.Label1 = Label(top)
        self.Label1.place(relx=0.15, rely=0.28, height=24, width=17)
        self.Label1.configure(activebackground="#f9f9f9")
        self.Label1.configure(activeforeground="black")
        self.Label1.configure(background="#d9d9d9")
        self.Label1.configure(disabledforeground="#a3a3a3")
        self.Label1.configure(foreground="#000000")
        self.Label1.configure(highlightbackground="#d9d9d9")
        self.Label1.configure(highlightcolor="black")
        self.Label1.configure(text='''ID''')






if __name__ == '__main__':
    vp_start_gui()
    interface_support.initializeConnection()
